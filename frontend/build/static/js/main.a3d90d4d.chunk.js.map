{"version":3,"sources":["components/Input.jsx","components/MovieForm.jsx","components/MovieListItem.jsx","components/MovieList.jsx","services/api.js","components/App.jsx","reportWebVitals.js","index.js"],"names":["Input","_ref","onChange","placeholder","value","props","_jsx","className","type","MovieForm","onAddMovie","title","setTitle","useState","onSubmit","e","preventDefault","children","target","Movie","movie","onDeleteMovie","_jsxs","onClick","src","alt","MovieList","movies","map","MovieListItem","_id","baseUrl","process","REACT_APP_API_URL","api","get","endpoint","axios","create","data","post","remove","delete","App","moviesEndpoint","setMovies","error","setError","useEffect","async","fetchMovies","Date","now","savedMovie","role","filter","m","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"iSAgBeA,MAbf,SAAcC,GAA8C,IAA7C,SAAEC,EAAQ,YAAEC,EAAW,MAAEC,KAAUC,GAAOJ,EACvD,OACEK,cAAA,SACEJ,SAAUA,EACVK,UAAU,QACVJ,YAAaA,EACbK,KAAK,OACLJ,MAAOA,KACHC,GAGV,ECgBeI,MA3Bf,SAAkBR,GAAkB,IAAjB,WAAES,GAAYT,EAC/B,MAAOU,EAAOC,GAAYC,mBAAS,IAanC,OACEP,cAAA,QAAMQ,SAVcC,IACpBA,EAAEC,iBAEGL,IAELD,EAAWC,GACXC,EAAS,IAAG,EAIiBK,SAC3BX,cAACN,EAAK,CACJ,aAAW,YACXE,SAfgBa,GAAMH,EAASG,EAAEG,OAAOd,OAgBxCD,YAAY,qBACZK,KAAK,OACLJ,MAAOO,KAIf,E,MCdeQ,MAXf,SAAclB,GAA4B,IAA3B,MAAEmB,EAAK,cAAEC,GAAepB,EACrC,OACEqB,eAAA,MAAIf,UAAU,gBAAeU,SAAA,CAC1BG,EAAMT,MACPL,cAAA,UAAQC,UAAU,wBAAwBgB,QAASF,EAAcJ,SAC/DX,cAAA,OAAKkB,IAAI,qBAAqBC,IAAI,qBAI1C,E,MCMeC,MAdf,SAAkBzB,GAA6B,IAA5B,OAAE0B,EAAM,cAAEN,GAAepB,EAC1C,OACEK,cAAA,MAAIC,UAAU,YAAWU,SACtBU,EAAOC,KAAKR,GACXd,cAACuB,EAAa,CAEZT,MAAOA,EACPC,cAAeA,IAAMA,EAAcD,IAF9BA,EAAMU,QAOrB,E,gBCdA,MAAMC,EAAUC,mIAAYC,mBAAqB,4BAQlCC,MANH,CACVC,IAAMC,GAAaC,IAAMF,IAAIJ,EAAUK,GACvCE,OAAQA,CAACF,EAAUG,IAASF,IAAMG,KAAKT,EAAUK,EAAUG,GAC3DE,OAASL,GAAaC,IAAMK,OAAOX,EAAUK,I,MCoDhCO,MArDf,WACE,MAAMC,EAAiB,WAChBjB,EAAQkB,GAAahC,mBAAS,KAC9BiC,EAAOC,GAAYlC,qBAqC1B,OAFAmC,qBAAU,IAjCUC,WAClB,IACE,MAAM,KAAEV,SAAeL,EAAIC,IAAIS,GAC/BC,EAAUN,EACZ,CAAE,MAAOO,GACPC,EAAS,8BACX,GA2BcG,IAAe,IAG7B5B,eAAA,OAAKf,UAAU,MAAKU,SAAA,CAClBX,cAACG,EAAS,CAACC,WA5BQuC,UACrB,IACE,MAAM7B,EAAQ,CAAEU,IAAKqB,KAAKC,MAAOzC,SACjCkC,EAAU,IAAIlB,EAAQP,IAEtB,MAAQmB,KAAMc,SAAqBnB,EAAII,OAAOM,EAAgBxB,GAE9DyB,EAAU,IAAIlB,EAAQ0B,GACxB,CAAE,MAAOP,GACPC,EAAS,6BACTF,EAAUlB,EACZ,KAkBGmB,GACCxC,cAAA,KAAGgD,KAAK,QAAQ/C,UAAU,QAAOU,SAC9B6B,IAGLxC,cAACoB,EAAS,CAACC,OAAQA,EAAQN,cApBL4B,UACxB,IACEJ,EAAUlB,EAAO4B,QAAQC,GAAMA,IAAMpC,WAC/Bc,EAAIO,OAAOG,EAAiB,IAAMxB,EAAMU,IAChD,CAAE,MAAOgB,GACPC,EAAS,+BACTF,EAAUlB,EACZ,OAgBJ,EC7Ce8B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK3D,IAAkD,IAAjD,OAAE4D,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAShE,EACpE4D,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECHFQ,IAASC,OACP7D,cAAC8D,IAAMC,WAAU,CAAApD,SACfX,cAACqC,EAAG,MAEN2B,SAASC,eAAe,SAM1Bd,G","file":"static/js/main.a3d90d4d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Input.css\";\n\nfunction Input({ onChange, placeholder, value, ...props }) {\n  return (\n    <input\n      onChange={onChange}\n      className=\"Input\"\n      placeholder={placeholder}\n      type=\"text\"\n      value={value}\n      {...props}\n    />\n  );\n}\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\n\nfunction MovieForm({ onAddMovie }) {\n  const [title, setTitle] = useState(\"\");\n\n  const handleChange = (e) => setTitle(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!title) return;\n\n    onAddMovie(title);\n    setTitle(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        aria-label=\"New Movie\"\n        onChange={handleChange}\n        placeholder=\"Add a new movie...\"\n        type=\"text\"\n        value={title}\n      />\n    </form>\n  );\n}\n\nexport default MovieForm;\n","import React from \"react\";\nimport \"./MovieListItem.css\";\n\nfunction Movie({ movie, onDeleteMovie }) {\n  return (\n    <li className=\"MovieListItem\">\n      {movie.title}\n      <button className=\"MovieListItem__Delete\" onClick={onDeleteMovie}>\n        <img src=\"/images/delete.svg\" alt=\"Delete movie\" />\n      </button>\n    </li>\n  );\n}\n\nexport default Movie;\n","import React from \"react\";\nimport MovieListItem from \"./MovieListItem\";\nimport \"./MovieList.css\";\n\nfunction MovieList({ movies, onDeleteMovie }) {\n  return (\n    <ul className=\"MovieList\">\n      {movies.map((movie) => (\n        <MovieListItem\n          key={movie._id}\n          movie={movie}\n          onDeleteMovie={() => onDeleteMovie(movie)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default MovieList;\n","import axios from \"axios\";\n\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:3001/api\";\n\nconst api = {\n  get: (endpoint) => axios.get(baseUrl + endpoint),\n  create: (endpoint, data) => axios.post(baseUrl + endpoint, data),\n  remove: (endpoint) => axios.delete(baseUrl + endpoint),\n};\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport MovieForm from \"./MovieForm\";\nimport MovieList from \"./MovieList\";\nimport api from \"../services/api\";\nimport \"./App.css\";\n\nfunction App() {\n  const moviesEndpoint = \"/movies\";\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState();\n\n  const fetchMovies = async () => {\n    try {\n      const { data } = await api.get(moviesEndpoint);\n      setMovies(data);\n    } catch (error) {\n      setError(\"Could not fetch the movies!\");\n    }\n  };\n\n  const handleAddMovie = async (title) => {\n    try {\n      const movie = { _id: Date.now(), title };\n      setMovies([...movies, movie]);\n\n      const { data: savedMovie } = await api.create(moviesEndpoint, movie);\n\n      setMovies([...movies, savedMovie]);\n    } catch (error) {\n      setError(\"Could not save the movie!\");\n      setMovies(movies);\n    }\n  };\n\n  const handleDeleteMovie = async (movie) => {\n    try {\n      setMovies(movies.filter((m) => m !== movie));\n      await api.remove(moviesEndpoint + \"/\" + movie._id);\n    } catch (error) {\n      setError(\"Could not delete the movie!\");\n      setMovies(movies);\n    }\n  };\n\n  useEffect(() => fetchMovies(), []);\n\n  return (\n    <div className=\"App\">\n      <MovieForm onAddMovie={handleAddMovie} />\n      {error && (\n        <p role=\"alert\" className=\"Error\">\n          {error}\n        </p>\n      )}\n      <MovieList movies={movies} onDeleteMovie={handleDeleteMovie} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}